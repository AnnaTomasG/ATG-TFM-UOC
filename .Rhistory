ggplot(hf, aes(x = age )) +
geom_histogram() +
facet_wrap(~ anaemia)
ggplot(hf, aes(x = ejection_fraction )) +
geom_histogram() +
facet_wrap(~ anaemia)
ggplot(hf, aes(x = age )) +
geom_histogram() +
facet_wrap(~ anaemia)
head(hf)
hfscaled<-scale(hf)
head(hfscaled)
fitK<-kmeans(hfscaled,3,nstart=50)
fitK
#plot(hf, col=fitK$cluster)
c<-fitK$cluster
get_pos_results(hfscaled,c)
df<-cbind(hfscaled,clusters=c)
df<-cbind(hfscaled,clusters=c)
df<-cbind(hfscaled,clusters=fitK$cluster)
df
df$cluters
df["cluters"]
df["clusters"]
df$clusters
df<-cbind(hfscaled,fitK$cluster)
df
names(df)[,-1]<-clusters
names(df)[,-1]<-"clusters"
names(df)[-1]<-"clusters"
head(df)
df$clusters
get_pos_results<-function(df,cvect){
df<-cbind(df,cvect)
for(i in 1:max(cvect)){
dead_ind_total <- dim(df[df$DEATH_EVENT==1,])[1]
cluster <- df[df$clusters==i,]
ind_cluster <- dim(cluster)[1]
dead_ind_cluster <- dim(cluster[cluster$DEATH_EVENT==1,])[1]
percentage <- round((dead_ind_cluster/ind_cluster)*100,2)
cat("Cluster num:", i, "with a total of", ind_cluster, "individuals, have", percentage, "% of positive death events
\n")
}
}
fitK<-kmeans(hfscaled,3,nstart=50)
fitK
#plot(hf, col=fitK$cluster)
get_pos_results(hfscaled,fitK$cluster)
df$clusters <- fitK$cluster
df
View(df)
View(df)
View(df)
df<-hfscaled
df$clusters <- fitK$cluster
get_pos_results(hfscaled,fitK$cluster
get_pos_results(hfscaled,fitK$cluster)
get_pos_results(hfscaled,fitK$cluster)
fitK<-kmeans(hfscaled,3,nstart=50)
fitK
#plot(hf, col=fitK$cluster)
hftemp<-cbind(hfscaled,fitK$cluster)
head(hftemp)
View(hftemp)
View(hftemp)
str(hftemp)
hfscaled<-scale(hf)
head(hfscaled)
hf<-read.csv(file="C:/Users/Anna/Documents/Anna/UOC/TFM/Datasets/A_POSSIBLES/Heart Failure/heart_failure_clinical_records_dataset.csv",header = TRUE, sep = ",")
head(hf)
hfscaled<-scale(hf)
head(hfscaled)
fitK<-kmeans(hfscaled,3,nstart=50)
fitK
#plot(hf, col=fitK$cluster)
get_pos_results<-function(df,cvect){
for(i in 1:max(cvect)){
dead_ind_total <- dim(df[df$DEATH_EVENT==1,])[1]
cluster <- df[cvect==i,]
ind_cluster <- dim(cluster)[1]
dead_ind_cluster <- dim(cluster[cluster$DEATH_EVENT==1,])[1]
percentage <- round((dead_ind_cluster/ind_cluster)*100,2)
cat("Cluster num:", i, "with a total of", ind_cluster, "individuals, have", percentage, "% of positive death events
\n")
}
}
get_pos_results(hf,fitK$cluster)
get_pos_results<-function(df,cvect){
for(i in 1:max(cvect)){
dead_ind_total <- dim(df[df$DEATH_EVENT==1,])[1]
cluster <- df[cvect==i,]
ind_cluster <- dim(cluster)[1]
dead_ind_cluster <- dim(cluster[cluster$DEATH_EVENT==1,])[1]
percentage <- round((dead_ind_cluster/ind_cluster)*100,2)
cat("Cluster number", i, "with a total of", ind_cluster, "individuals, has", dead_ind_cluster, "positive death events (", percentage, "%) \n")
}
}
fitK<-kmeans(hfscaled,3,nstart=50)
fitK
#plot(hf, col=fitK$cluster)
get_pos_results(hf,fitK$cluster)
get_pos_results<-function(df,cvect){
for(i in 1:max(cvect)){
dead_ind_total <- dim(df[df$DEATH_EVENT==1,])[1]
cluster <- df[cvect==i,]
ind_cluster <- dim(cluster)[1]
dead_ind_cluster <- dim(cluster[cluster$DEATH_EVENT==1,])[1]
percentage <- round((dead_ind_cluster/ind_cluster)*100,2)
cat("Cluster number", i, "with a total of", ind_cluster, "individuals, has", dead_ind_cluster, "positive death events (", percentage, "% ) \n")
}
}
get_pos_results(hf,fitK$cluster)
fitK<-kmeans(hfscaled,3,nstart=50)
fitK
#plot(hf, col=fitK$cluster)
get_pos_results(hf,fitK$cluster)
fitK<-kmeans(hfscaled,3,nstart=50)
fitK
#plot(hf, col=fitK$cluster)
get_pos_results(hf,fitK$cluster)
fitK<-kmeans(hfscaled,3,nstart=50)
fitK
#plot(hf, col=fitK$cluster)
get_pos_results(hf,fitK$cluster)
fitK<-kmeans(hfscaled,3,nstart=50)
fitK
#plot(hf, col=fitK$cluster)
get_pos_results(hf,fitK$cluster)
k<-list()
for(i in 1:20){
k[[i]]<-kmeans(hfscaled,i)
}
betweenss_totss<-list()
for(i in 1:20){
betweenss_totss[[i]]<-k[[i]]$betweenss/k[[i]]$totss
}
plot(1:20,betweenss_totss, type="b", ylab="Between SS / Total SS", xlab="Clusters(k)")
fitK<-kmeans(hfscaled,3,nstart=50)
fitK
for(k in 1:10){
fitK <- kmeans(hfscaled,k)
cat("k =", k,"\n")
get_pos_results(hf,fitK$cluster)
}
for(k in 1:10){
fitK <- kmeans(hfscaled,k,nstart=50)
cat("k =", k,"\n")
get_pos_results(hf,fitK$cluster)
}
get_pos_results(hf,fitK$cluster)
head(hf)
str(hf)
summary(hf)
cat(summary(hf))
hf$sex<-replace(hf$sex,hf$sex==0,"Female")
hf$sex<-replace(hf$sex,hf$sex==1,"Male")
hf$sex
head(hf)
summary(hf)
hf$anaemia<-as.factor(hf$anaemia)
head(hf)
summary(hf)
hf<-read.csv(file="C:/Users/Anna/Documents/Anna/UOC/TFM/Datasets/A_POSSIBLES/Heart Failure/heart_failure_clinical_records_dataset.csv",header = TRUE, sep = ",")
head(hf)
str(hf)
hf_factor<-hf
head(hf)
head(hf)
hf_factor<-hf
hf_factor$anaemia<-as.factor(hf_factor$anaemia)
hf_factor$diabetes<-as.factor(hf_factor$diabetes)
hf_factor$high_blood_pressure<-as.factor(hf_factor$high_blood_pressure)
hf_factor$sex<-as.factor(hf_factor$sex)
hf_factor$smoking<-as.factor(hf_factor$smoking)
head(hf_factor)
for(k in 1:5){
fitK <- kmeans(hfscaled,k,nstart=50)
cat("k =", k,"\n")
get_pos_results(hf,fitK$cluster)
for(c in 1:k){
cat(summary(hf_factor[fitK$cluster==c]))
}
}
for(k in 1:5){
fitK <- kmeans(hfscaled,k,nstart=50)
cat("k =", k,"\n")
get_pos_results(hf,fitK$cluster)
for(c in 1:k){
cat(summary(hf_factor[fitK$cluster==c,]))
}
}
for(k in 1:5){
fitK <- kmeans(hfscaled,k,nstart=50)
cat("k =", k,"\n")
get_pos_results(hf,fitK$cluster)
for(c in 1:k){
cat(summary(hf_factor[fitK$cluster==c,]),"\n")
}
}
get_pos_results(hf,fitK$cluster)
cat(summary(hf))
for(k in 1:5){
fitK <- kmeans(hfscaled,k,nstart=50)
cat("k =", k,"\n")
get_pos_results(hf,fitK$cluster)
for(c in 1:k){
summary(hf_factor[fitK$cluster==c,])
}
}
library(qwraps2)
install.packages(‘qwraps2’)
install.packages(qwraps2)
install.packages("qwraps2")
install.packages("qwraps2")
library(qwraps2)
summary_table(hf_factor)
summary_table(hf_factor)
summary_table(hf_factor)
whole<-summary_table(hf_factor)
whole
for(k in 1:5){
fitK <- kmeans(hfscaled,k,nstart=50)
cat("k =", k,"\n")
get_pos_results(hf,fitK$cluster)
for(c in 1:k){
summary(hf_factor[fitK$cluster==c,])
}
}
for(k in 1:5){
fitK <- kmeans(hfscaled,k,nstart=50)
cat("k =", k,"\n")
get_pos_results(hf,fitK$cluster)
for(c in 1:k){
summary(hf_factor[fitK$cluster==c,])
}
}
summary(hf_factor)
print(summary(hf_factor))
for(k in 1:5){
fitK <- kmeans(hfscaled,k,nstart=50)
cat("k =", k,"\n")
get_pos_results(hf,fitK$cluster)
for(c in 1:k){
print(summary(hf_factor[fitK$cluster==c,]))
}
}
for(k in 1:5){
fitK <- kmeans(hfscaled,k,nstart=50)
cat("k =", k,"\n")
get_pos_results(hf,fitK$cluster)
for(c in 1:k){
cat("c =",c,"\n")
print(summary(hf_factor[fitK$cluster==c,]))
}
}
for(k in 1:5){
fitK <- kmeans(hfscaled,k,nstart=50)
cat("k =", k,"\n")
get_pos_results(hf,fitK$cluster)
for(c in 1:k){
cat("Cluster =",c,"\n")
print(summary(hf_factor[fitK$cluster==c,]))
}
}
for(k in 1:5){
fitK <- kmeans(hfscaled,k,nstart=50)
cat("k =", k,"\n")
get_pos_results(hf,fitK$cluster)
for(c in 1:k){
cat("Cluster =",c,"\n")
print(summary(hf[fitK$cluster==c,]))
}
}
head(hf)
ggplot(hf)+
geom_boxplot()
ggplot(hf)+ geom_boxplot()
boxplot(hf)
boxplot(hf[,-7])
boxplot(hf[,c=(-2,-7)])
boxplot(hf[,c=(-2,-7)])
boxplot(hf[,c=(-2 &-7)])
boxplot(hf[,-(2,7)])
boxplot(hf[,-(2:7)])
boxplot(hf_varcont)
boxplot(hf_factor[,-7])
boxplot(hf_varcont[,-7])
boxplot(hf_varcont, )
?boxplot
boxplot(hf_varcont,horizontal=TRUE )
boxplot(hf_varcont)
boxplot(hf_varcont[,-4])
boxplot(hf_varcont[,-c(4,2)])
boxplot(hf_varcont)
ggplot(hf)+ geom_boxplot()
boxplot(hf_varcont)
boxplot(hf_varcont[,-c(4,2)])
boxplot(hf_varcont[,])
boxplot(hf_varcont)
boxplot(hf_varcont[,-c(4,2)])
boxplot(hf_varcont[,4])
boxplot(hf_varcont[,2])
boxplot(hf_varcont[,5])
ggplot(hf_factor, aes(x = hf_factor$anaemia, y = hf_factor$ejection_fraction)) +
geom_boxplot()
ggplot(hf_factor, aes(x = hf_factor$anaemia, y = hf_factor$age)) +
geom_boxplot()
ggplot(hf_factor, aes(x = hf_factor$anaemia, y = hf_factor$creatinine_phosphokinase)) +
geom_boxplot()
ggplot(hf_factor, aes(x = hf_factor$anaemia, y = hf_factor$platelets)) +
geom_boxplot()
ggplot(hf_factor, aes(x = hf_factor$anaemia, y = hf_factor$serum_creatinine)) +
geom_boxplot()
ggplot(hf_factor, aes(x = hf_factor$anaemia, y = hf_factor$serum_sodium)) +
geom_boxplot()
ggplot(hf, aes(x = hf$ejection_fraction, fill = as.factor(hf$anaemia))) +
geom_density(alpha = .2)
boxplot(hf_varcont)
boxplot(hf$age)
dim(hf)
dim(hf)[2]
boxplot(hf$age)
boxplot(hf[,1])
for(i in 1:dim(hf)[2]){
boxplot(hf[,i])
}
name(hf[,1])
names(hf[,1])
names(hf[,1])
names(hf)
for(i in 1:dim(hf)[2]){
boxplot(hf[,i])
title(names(hf)[i])
}
for(i in 1:dim(hf)[2]){
boxplot(hf[,i])
title(names(hf)[i])
out<-boxplot.stats(hf[,i])$out
print(names(hf)[i], ": ",out)
# out_ind<-which(hf[,i] %in% c(out))
}
for(i in 1:dim(hf)[2]){
boxplot(hf[,i])
title(names(hf)[i])
out<-boxplot.stats(hf[,i])$out
print(out)
# out_ind<-which(hf[,i] %in% c(out))
}
for(i in 1:dim(hf)[2]){
boxplot(hf[,i])
title(names(hf)[i])
out<-boxplot.stats(hf[,i])$out
if(dim(out)!= 0){
print(names(hf)[i], ": ",out)
}
# out_ind<-which(hf[,i] %in% c(out))
}
for(i in 1:dim(hf)[2]){
boxplot(hf[,i])
title(names(hf)[i])
out<-boxplot.stats(hf[,i])$out
if(dim(out)[1]!= 0){
print(names(hf)[i], ": ",out)
}
# out_ind<-which(hf[,i] %in% c(out))
}
for(i in 1:dim(hf)[2]){
boxplot(hf[,i])
title(names(hf)[i])
}
hf[,3]
head(hf$creatinine_phosphokinase)
out_crephos<-boxplot.stats(hf$creatinine_phosphokinase)$out
out_crephos_ind<-which(hf[,i] %in% c(out))
hf[out_crephos_ind,]
head(hf[out_crephos_ind,])
hf[out_crephos_ind,]
out_crephos<-boxplot.stats(hf$creatinine_phosphokinase)$out
out_crephos_ind<-which(hf$creatinine_phosphokinase %in% c(out))
hf[out_crephos_ind,]
out_crephos<-boxplot.stats(hf$creatinine_phosphokinase)$out
out_crephos_ind<-which(hf$creatinine_phosphokinase %in% c(out_crephos))
hf[out_crephos_ind,]
summary(hf$creatinine_phosphokinase)
fitK<-kmeans(hfscaled,3,nstart=50)
fitK
#plot(hf, col=fitK$cluster)
get_pos_results(hf,fitK$cluster)
for(k in 1:5){
fitK <- kmeans(hfscaled,k,nstart=50)
cat("k =", k,"\n")
get_pos_results(hf,fitK$cluster)
for(c in 1:k){
cat("Cluster =",c,"\n")
print(summary(hf[fitK$cluster==c,]))
}
}
for(i in 1:dim(hf)[2]){
boxplot(hf[,i])
title(names(hf)[i])
}
out_crephos<-boxplot.stats(hf$creatinine_phosphokinase)$out
out_crephos_ind<-which(hf$creatinine_phosphokinase %in% c(out_crephos))
hf[out_crephos_ind,]
summary(hf$creatinine_phosphokinase)
summary(hf[out_crephos_ind,])
for(i in 1:dim(hf)[2]){
boxplot(hf[,i])
title(names(hf)[i])
}
out_crephos<-boxplot.stats(hf$creatinine_phosphokinase)$out
out_crephos_ind<-which(hf$creatinine_phosphokinase %in% c(out_crephos))
hf[out_crephos_ind,]
summary(hf[out_crephos_ind,])
ggplot(hf, aes(x = hf$ejection_fraction, fill = as.factor(hf$anaemia))) +
geom_density(alpha = .2)
ggplot(hf, aes(x = hf$age, fill = as.factor(hf$anaemia))) +
geom_density(alpha = .2)
ggplot(hf, aes(x = hf$creatinine_phosphokinase, fill = as.factor(hf$DEATH_EVENT))) +
geom_density(alpha = .2)
ggplot(hf, aes(x = hf$age, fill = as.factor(hf$high_blood_pressure))) +
geom_density(alpha = .2)
ggplot(hf, aes(x = hf$age, fill = as.factor(hf$DEATH_EVENT))) +
geom_density(alpha = .2)
ggplot(hf, aes(x = hf$serum_sodium, fill = as.factor(hf$DEATH_EVENT))) +
geom_density(alpha = .2)
ggplot(hf, aes(x = hf$ejection_fraction, fill = as.factor(hf$DEATH_EVENT))) +
geom_density(alpha = .2)
ggplot(hf, aes(x = hf$platelets, fill = as.factor(hf$DEATH_EVENT))) +
geom_density(alpha = .2)
ggplot(hf, aes(x = hf$serum_creatinine, fill = as.factor(hf$DEATH_EVENT))) +
geom_density(alpha = .2)
ggplot(hf, aes(x = hf$time, fill = as.factor(hf$DEATH_EVENT))) +
geom_density(alpha = .2)
ggplot(hf, aes(x = hf$creatinine_phosphokinase, fill = as.factor(hf$sex))) +
geom_density(alpha = .2)
ggplot(hf, aes(x = hf$age, fill = as.factor(hf$sex))) +
geom_density(alpha = .2)
ggplot(hf, aes(x = hf$serum_sodium, fill = as.factor(hf$sex))) +
geom_density(alpha = .2)
ggplot(hf, aes(x = hf$ejection_fraction, fill = as.factor(hf$sex))) +
geom_density(alpha = .2)
ggplot(hf, aes(x = hf$platelets, fill = as.factor(hf$sex))) +
geom_density(alpha = .2)
ggplot(hf, aes(x = hf$serum_creatinine, fill = as.factor(hf$sex))) +
geom_density(alpha = .2)
ggplot(hf, aes(x = hf$time, fill = as.factor(hf$sex))) +
geom_density(alpha = .2)
head(hf)
ggplot(hf, aes(x = hf$platelets, fill = as.factor(hf$anaemia))) +
geom_density(alpha = .2)
ggplot(hf, aes(x = hf$serum_sodium, fill = as.factor(hf$high_blood_pressure))) +
geom_density(alpha = .2)
head(hf)
hf[!complete.cases(hf),]
plot(hf)
plot(hf$ejection_fraction, hf$platelets)
plot(hf)
hf$EF<-cut(hf$ejection_fraction,c(0,40,50))
head(hf)
hf$EF
hf$EF<-cut(hf$ejection_fraction,c(0,40,50,100))
hf$EF
hf$EF2<-cut(hf$ejection_fraction,c(0,40,50,100), labels = c("Reducida", "Limite", "Conservada"))
hf$EF2
hf$ejection_fraction
plot(hf)
plot(hf)
plot(hf)
hf<-hf[,-14]
plot(hf)
ggplot(hf,aes(x=DEATH_EVENT, fill=EF2) )+ geom_bar()
ggplot(hf,aes(x=DEATH_EVENT, fill=EF2) )+ geom_bar()
ggplot(hf,aes(x=DEATH_EVENT, fill=EF2) )+ geom_bar(position = "dodge")
ggplot(hf,aes(x=DEATH_EVENT, fill=EF2) )+ geom_bar(position = "fill") + ylab("proportion")
ggplot(hf,aes(x=DEATH_EVENT) )+ geom_bar()+facet_wrap(~EF2)
ggplot(hf,aes(x=EF2) )+ geom_bar()+facet_wrap(~DEATH_EVENT)
#s'utilitza en la funció kmeans
hfscaled<-scale(hf)
head(hf)
hfscaled<-scale(hf[,-13-14])
hfscaled<-scale(hf[,-c(13,14)])
head(hfscaled)
fitK<-kmeans(hfscaled,3,nstart=50)
fitK
#plot(hf, col=fitK$cluster)
get_pos_results(hf,fitK$cluster)
install.packages("factoextra")
install.packages("factoextra")
library(qwraps2)
library(factoextra)
library(ggplot2)
install.packages("lifecycle")
install.packages("lifecycle")
library(ggplot2)
#Cargamos las librerias que necesitaremos
library(knitr)
library(kableExtra)
install.packages("rlang")
#Cargamos las librerias que necesitaremos
library(knitr)
library(kableExtra)
install.packages("lifecycle")
install.packages("lifecycle")
#Cargamos las librerias que necesitaremos
library(knitr)
library(kableExtra)
library(lifecycle)
#Cargamos las librerias que necesitaremos
library(knitr)
library(kableExtra)
library(ggplot2)
